set cut_paste_input [stack 0]
push $cut_paste_input
Group {
 name ku_GradeAOV
 autolabel "nuke.thisNode().name()+'\\n'+nuke.thisNode()\['tx_aovs'].value().replace('<i>','').replace('</i>','')"
 tile_color 0x3c547fff
 label "\[value channels0]"
 note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold Bold"
 note_font_color 0xffffffff
 selected true
 xpos -65
 ypos 114
 addUserKnob {20 tb_user l ku_GradeAOV}
 addUserKnob {26 tx_aovs l "Selected AOVs: " T "<i>NO PASSES PICKED</i>"}
 addUserKnob {22 bt_pick l "Pick AOVs" T "n = nuke.thisNode()\nlayer_all = nuke.layers(n)\nlayer = \[l for l in layer_all if l not in \['rgb', 'rgba', 'Bty', 'alpha']]\nlayer.insert(0,'none')\n\np = nuke.Panel('%s: Pick AOVs (4 max)' % n.name())\np.addEnumerationPulldown('aov 1', ' '.join(layer))\np.addEnumerationPulldown('aov 2', ' '.join(layer))\np.addEnumerationPulldown('aov 3', ' '.join(layer))\np.addEnumerationPulldown('aov 4', ' '.join(layer))\n\nif p.show():\n    sel_layers = \[p.value('aov %s' % i) for i in range(1,5)]\n    sel_layers = list(dict.fromkeys(sel_layers))\n    sel_layers = \[l for l in sel_layers if l != 'none']\n    n\['tx_aovs'].setValue(', '.join(sorted(sel_layers)))\n\n    node_keep = nuke.toNode('%s._KEEP_' % n.name())\n    node_expr = nuke.toNode('%s._KEPT_PASSES_' % n.name())\n    for i in range(len(sel_layers)):\n        if i == 0:\n            node_keep\['channels'].setValue(sel_layers\[i])\n        else:\n            node_keep\['channels%s' % (i+1)].setValue(sel_layers\[i])\n    for e, ch in enumerate(\['red', 'green', 'blue']):\n        # Each expr\n        field = ''\n        for i, l in enumerate(sel_layers):\n            # eachLayer\n            if i<(len(sel_layers)-1):\n                field += '%s.%s' % (l, ch)\n                field += '+'\n            else:\n                field += '%s.%s' % (l, ch)\n        print field\n        node_expr\['expr%s' % e].setValue(field)" +STARTLINE}
 addUserKnob {22 bt_clear l "Clear Picked" -STARTLINE T "n = nuke.thisNode()\nnode_keep = nuke.toNode('%s._KEEP_' % n.name())\nnode_expr = nuke.toNode('%s._KEPT_PASSES_' % n.name())\n\nfor i in range(4):\n    node_keep\['channels'].setValue('none') if i==0 else node_keep\['channels%s' % (i+1)].setValue('none')\n    node_expr\['expr%s' % i].setValue('')\n\nn\['tx_aovs'].setValue('<i>NO PASSES PICKED</i>')\n"}
 addUserKnob {6 ck_preview l "Preview AOV" -STARTLINE}
 addUserKnob {4 mu_graded l "| view" -STARTLINE M {Orig Graded ContactSheet ""}}
 mu_graded ContactSheet
 addUserKnob {26 ""}
 addUserKnob {41 saturation T _SATURATION_.saturation}
 addUserKnob {41 blackpoint T _GRADE_.blackpoint}
 addUserKnob {41 whitepoint T _GRADE_.whitepoint}
 addUserKnob {41 black l lift T _GRADE_.black}
 addUserKnob {41 white l gain T _GRADE_.white}
 addUserKnob {41 multiply T _GRADE_.multiply}
 addUserKnob {41 add l offset T _GRADE_.add}
 addUserKnob {41 gamma T _GRADE_.gamma}
 addUserKnob {26 ""}
 addUserKnob {41 mix T _MIX_.which}
 addUserKnob {26 "" l "  "}
 addUserKnob {22 additive l Minus/Plus T "nuke.toNode('_SUB_')\['operation'].setValue('minus')\nnuke.toNode('_ADD_')\['operation'].setValue('plus')\n\nprint \"operation Minus/Plus\"" +STARTLINE}
 addUserKnob {22 multiplictive l Divide/Multiply -STARTLINE T "nuke.toNode('_SUB_')\['operation'].setValue('divide')\nnuke.toNode('_ADD_')\['operation'].setValue('multiply')\n\nprint \"operation Divide/Multiply\""}
 addUserKnob {22 addMask l "Add Mask" -STARTLINE T "if nuke.toNode('mask'):\n    keymix = nuke.toNode('_KEYMIX_')\n    nuke.delete(nuke.toNode('mask'))\n    keymix\['disable'].setValue(True)\n    nuke.thisKnob().setLabel(\"Add Mask\")\nelse:\n    m = nuke.nodes.Input(name='mask')\n    keymix = nuke.toNode('_KEYMIX_')\n    m.setXYpos(keymix.xpos()+100,keymix.ypos())\n    keymix.setInput(2, m)\n    keymix\['disable'].setValue(False)\n    nuke.thisKnob().setLabel(\"Remove Mask\")\n"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x2e5c5cff
  label "XTRA EDIT\n(Grade channels must set to 'all')"
  note_font "Bitstream Vera Sans Bold Bold Bold Bold Bold"
  note_font_size 42
  note_font_color 0xc0ccccff
  xpos 662
  ypos 207
  bdwidth 1305
  bdheight 883
 }
 Input {
  inputs 0
  name Input
  xpos 524
  ypos -211
 }
 Dot {
  name Dot69
  xpos 555
  ypos -107
 }
set Nb091e00 [stack 0]
 Dot {
  name Dot6
  xpos 396
  ypos -107
 }
set Nb096450 [stack 0]
 Crop {
  box {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
  reformat true
  crop false
  name _CROP_TO_BBOX_
  xpos 365
  ypos 1091
 }
 LayerContactSheet {
  showLayerNames {{_MULTIFIED_.which==2&ck_preview==1?1:0}}
  name _LAYERCONTACT_
  xpos 365
  ypos 1131
 }
push $Nb091e00
 Dot {
  name Dot5
  xpos 1108
  ypos -107
 }
 Remove {
  operation keep
  channels none
  name _KEEP_
  label "\[value channels]"
  xpos 1077
  ypos -34
 }
 Expression {
  name _KEPT_PASSES_
  label "sum passes\nand \nshuffle to\nrgba"
  xpos 1077
  ypos 16
 }
 Dot {
  name Dot68
  xpos 1108
  ypos 141
 }
set Nb0cba10 [stack 0]
 Grade {
  channels all
  black_clamp false
  name _GRADE_
  xpos 1077
  ypos 1170
 }
 Saturation {
  channels all
  mode Maximum
  name _SATURATION_
  xpos 1077
  ypos 1206
 }
 Dot {
  name Dot8
  xpos 793
  ypos 1212
 }
set Nb0ee990 [stack 0]
 Dot {
  name Dot10
  xpos 793
  ypos 1327
 }
push $Nb0cba10
 Dot {
  name Dot4
  xpos 245
  ypos 141
 }
 Switch {
  inputs 3
  which {{mu_graded}}
  name _MULTIFIED_
  label "\[value which]"
  xpos 214
  ypos 1321
 }
 Dot {
  name Dot3
  xpos 245
  ypos 1645
 }
push $Nb096450
 Dot {
  name Dot2
  xpos 138
  ypos -107
 }
 Dot {
  name Dot1
  xpos 138
  ypos 1607
 }
set N86ef6e0 [stack 0]
push $Nb0ee990
 Remove {
  channels rgba
  name _REMOVE_
  label "\[value channels]"
  xpos 647
  ypos 1271
 }
push $Nb0ee990
push $Nb0cba10
push $Nb091e00
 Merge2 {
  inputs 2
  operation from
  name _SUB_
  xpos 524
  ypos 141
 }
 Merge2 {
  inputs 2
  operation plus
  Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  output rgb
  also_merge all
  name _ADD_
  xpos 524
  ypos 1212
 }
 Copy {
  inputs 2
  channels all
  name _COPY_GRADED_
  xpos 524
  ypos 1264
 }
 Keymix {
  inputs 2
  invertMask true
  name _KEYMIX_
  xpos 524
  ypos 1601
  disable true
 }
 Switch {
  inputs 2
  which 1
  name _PREVIEW_
  label "\[value which]"
  xpos 524
  ypos 1638
  disable {{!ck_preview}}
 }
push $N86ef6e0
 Dot {
  name Dot7
  xpos 138
  ypos 1683
 }
 Dissolve {
  inputs 2
  which 1
  name _MIX_
  xpos 524
  ypos 1676
 }
 Output {
  name Output
  xpos 524
  ypos 1839
 }
end_group
